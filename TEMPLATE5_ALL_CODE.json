{
  "python_code": "\n# =====================================================================\n# 1) ZIP展開＋70段スキャン＋TamperSuspect＋日付混在＋集計\n# =====================================================================\nimport os, re, zipfile, json, hashlib\nfrom pathlib import Path\nimport pandas as pd\nfrom datetime import datetime\n\n# 出力ディレクトリ\noutdir = Path(\"/mnt/data/KABUKI_INV_2025-06-01_outputs\")\noutdir.mkdir(exist_ok=True)\n\ndef sha256_file(path):\n    h = hashlib.sha256()\n    with open(path, \"rb\") as f:\n        for chunk in iter(lambda: f.read(8192), b\"\"):\n            h.update(chunk)\n    return h.hexdigest()\n\ndef extract_zip_to_dir(zip_path, extract_to):\n    with zipfile.ZipFile(zip_path, \"r\") as z:\n        z.extractall(extract_to)\n    return list(Path(extract_to).rglob(\"*\"))\n\ndef scan_file_for_tamper(file_path, width_list):\n    \"\"\"指定された文字幅ごとにTamperSuspectをスキャン\"\"\"\n    with open(file_path, \"rb\") as f:\n        data = f.read()\n    text = data.decode(\"utf-8\",\"ignore\")\n    results = []\n    for width in width_list:\n        windows = [text[i:i+width] for i in range(0, len(text), width)]\n        for w in windows:\n            if re.search(r\"\\\\u[0-9a-fA-F]{4}\", w):\n                results.append({\"width\": width, \"window\": w[:80]})\n    return results\n\ndef normalize_time(t):\n    try:\n        return datetime.fromisoformat(t).isoformat()\n    except:\n        return t\n\n# 70段スキャンの幅リスト\nwidths = [\n  222,555,888,2222,5555,8888,12222,15555,18888,\n  22222,25555,28888,32222,35555,38888,42222,45555,\n  48888,52222,55555,58888,62222,65555,68888,72222,\n  75555,78888,82222,85555,88888,92222,95555,98888,\n  102222,105555,108888,112222,115555,118888,122222,\n  125555,128888,132222,135555,138888,142222,145555,\n  148888,152222,155555,158888,162222,165555,168888,\n  172222,175555,178888,182222,185555,188888,192222,\n  195555,198888,202222,205555,208888,212222,215555,\n  218888,222222\n]\n\n# =====================================================================\n# 2) PDF作成ユーティリティ（レポート出力用）\n# =====================================================================\ndef make_pdf(path, text):\n    from reportlab.platypus import SimpleDocTemplate, Paragraph\n    from reportlab.lib.styles import getSampleStyleSheet\n    from reportlab.lib.pagesizes import A4\n    styles = getSampleStyleSheet()\n    doc = SimpleDocTemplate(str(path), pagesize=A4)\n    story = [Paragraph(t, styles[\"Normal\"]) for t in text.split(\"\\n\")]\n    doc.build(story)\n\n# =====================================================================\n# 3) 軽量ファイル保存（DATE_MAP / MIXED_DATE_MAPなど）\n# =====================================================================\nif not date_map_df.empty:\n    for col in date_map_df.select_dtypes(include=[object]).columns:\n        date_map_df[col] = date_map_df[col].astype(str).str.encode(\"utf-8\",\"replace\").str.decode(\"utf-8\",\"replace\")\n    date_map_df.to_csv(outdir/\"DATE_MAP.csv\", index=False, encoding=\"utf-8\")\n\nif not mixed_df.empty:\n    for col in mixed_df.select_dtypes(include=[object]).columns:\n        mixed_df[col] = mixed_df[col].astype(str).str.encode(\"utf-8\",\"replace\").str.decode(\"utf-8\",\"replace\")\n    mixed_df.to_csv(outdir/\"MIXED_DATE_MAP.csv\", index=False, encoding=\"utf-8\")\n\n# =====================================================================\n# 4) テンプレ3（被害記録マッピング）出力\n# =====================================================================\nimport pandas as pd\nimport json\nfrom reportlab.platypus import SimpleDocTemplate, Paragraph\nfrom reportlab.lib.styles import getSampleStyleSheet\nfrom reportlab.lib.pagesizes import A4\n\noutdir3 = Path(\"/mnt/data/KABUKI_INV_2025-06-01_outputs_template3\")\noutdir3.mkdir(exist_ok=True)\n\n# ... (省略: 被害記録recordsとCSV/JSON/TXT/PDF保存処理)\n\n# =====================================================================\n# 5) テンプレ4（総括報告）出力\n# =====================================================================\noutdir4 = Path(\"/mnt/data/KABUKI_INV_2025-06-01_outputs_template4\")\noutdir4.mkdir(exist_ok=True)\n\n# ... (省略: summaryとCSV/JSON/TXT/PDF保存処理)\n"
}